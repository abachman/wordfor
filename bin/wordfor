#!/usr/bin/env ruby
$:.unshift(File.dirname(__FILE__) + '/../lib') unless $:.include?(File.dirname(__FILE__) + '/../lib')

require 'optparse'
require 'wordfor'

options = {}

OptionParser.new do |opts|
  opts.banner = <<-EOS
wordfor is a command line thesaurus.

Usage:

    wordfor [options] WORD

NOTE: You have to get an API key from http://words.bighugelabs.com/api.php to
use this program.

EOS

  opts.on('-v', '--version', 'show version and quit') do |v|
    options[:version] = v
  end

  opts.on('-d', '--debug', 'debugging output') do |d|
    options[:debug] = d
  end
end.parse!

if options[:version]
  puts "wordfor #{ Wordfor::VERSION } #{ Wordfor::VERSION_DATE }"
  exit 0
end

word = ARGV[0]

if word.nil?
  puts "You must give a word to look up."
  exit 1
else
  word = word.strip
end

result = Wordfor::Lookup.new.lookup(word)

if options[:debug]
  puts result.inspect
  puts result.keys.inspect
end

def display_word_relationship(words, relationship)
  if words[relationship]
    word_list = words[relationship].join(", ")
    puts "  #{ relationship }:"
    puts '    ' + Wordfor::Plaintext.wrapped_text(word_list, :indent => '    ')
  end
end

result.each_pair do |(part_of_speech, words)|
  if words
    puts "#{ part_of_speech }:"

    display_word_relationship words, :synonyms
    display_word_relationship words, :hyponyms
    display_word_relationship words, :hypernyms
    display_word_relationship words, :antonyms
  end
end
